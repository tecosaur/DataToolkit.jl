var documenterSearchIndex = {"docs":
[{"location":"commands/","page":"Commands","title":"Commands","text":"EditURL=\"commands.org\"","category":"page"},{"location":"commands/#Commands","page":"Commands","title":"Commands","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"All of the relevant help for the REPL can be accessed from inside the REPL. They are repeated here verbatim.","category":"page"},{"location":"commands/#help","page":"Commands","title":"help","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"  Command  Action                                         \n  ────────────────────────────────────────────────────────\n  add      Add a data set to the current collection       \n  check    Check the state for potential issues           \n  config   Inspect and modify the current configuration   \n  edit     Edit the specification of a dataset            \n  init     Initialise a new data collection               \n  list     List the datasets in a certain collection      \n  make     Create a new data set from existing information\n  plugin   Inspect and modify the set of plugins used     \n  remove   Remove a data set                              \n  search   Search for a particular data collection        \n  show     Show the dataset refered to by an identifier   \n  stack    Operate on the data collection stack           \n  help     Display help text for commands and transformers\n\n  Commands can also be triggered by unique prefixes or substrings.\n","category":"page"},{"location":"commands/#repl-add","page":"Commands","title":"?add","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Add a data set to the current collection","category":"page"},{"location":"commands/#Usage","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"This will interactively ask for all required information.","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"Optionally, the name and source can be specified using the following forms:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> add NAME\ndata> add NAME from SOURCE\ndata> add NAME SOURCE\ndata> add from SOURCE","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The from keyword is optional, except for in the final form where only the source is immediately provided. To include spaces in the name, use either single or double quotes (e.g. \"name with spaces\").","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The transformers drivers used can also be specified by using a via argument before from, with a form like so:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> add via TRANSFORMERS...\ndata> add NAME via TRANSFORMERS... from SOURCE","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The type of transformer can also be specified using flags. Namely storage (-s), loader (-l), and writer (-w). For example:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> add via -s web -l csv","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"Invalid transformer drivers are automatically skipped, so one could use:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> add via -sl web csv","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"which would be equivalent to add via -s web csv -l web csv, but only web will be reccognised as a valid storage backend and csv as a valid loader. This works well in most cases, which is why -sl are the default flags.","category":"page"},{"location":"commands/#Examples","page":"Commands","title":"Examples","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> add iris from https://github.com/mwaskom/seaborn-data/blob/master/iris.csv\ndata> add iris via web csv from https://github.com/mwaskom/seaborn-data/blob/master/iris.csv\ndata> add iris via -s web -l csv from https://github.com/mwaskom/seaborn-data/blob/master/iris.csv\ndata> add \"from\" from.txt # add a data set with the name from","category":"page"},{"location":"commands/#repl-check","page":"Commands","title":"?check","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Check the state for potential issues","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"By default, this operates on the active collection, however it can also be applied to any other collection or a specific data set.","category":"page"},{"location":"commands/#Usage-2","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> check (runs on the active collection)\ndata> check COLLECTION\ndata> check IDENTIFIER","category":"page"},{"location":"commands/#?config","page":"Commands","title":"?config","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"  Inspect and modify the current configuration\n\n  Subcommand  Action                                         \n  ───────────────────────────────────────────────────────────\n  get         Get the current configuration                  \n  set         Set a configuration property                   \n  unset       Remove a configuration property                \n  help        Display help text for commands and transformers\n","category":"page"},{"location":"commands/#repl-config-get","page":"Commands","title":"?config get","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Get the current configuration","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The parameter to get the configuration of should be given using TOML-style dot seperation.","category":"page"},{"location":"commands/#Examples-2","page":"Commands","title":"Examples","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> get defaults.memorise\ndata> get my.\"special thing\".extra","category":"page"},{"location":"commands/#repl-config-set","page":"Commands","title":"?config set","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Set a configuration property","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The parameter to set the configuration of should be given using TOML-style dot seperation.","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"Similarly, the new value should be expressed using TOML syntax.","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"##Examples","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> set defaults.memorise true\ndata> set my.\"special thing\".extra {a=1, b=2}","category":"page"},{"location":"commands/#repl-config-unset","page":"Commands","title":"?config unset","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Remove a configuration property","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The parameter to be removed should be given using TOML-style dot seperation.","category":"page"},{"location":"commands/#Examples-3","page":"Commands","title":"Examples","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> unset defaults.memorise\ndata> unset my.\"special thing\".extra","category":"page"},{"location":"commands/#repl-edit","page":"Commands","title":"?edit","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Edit the specification of a dataset","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"Open the specified dataset as a TOML file for editing, and reload the dataset from the edited contents.","category":"page"},{"location":"commands/#Usage-3","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> edit IDENTIFIER","category":"page"},{"location":"commands/#repl-init","page":"Commands","title":"?init","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Initialise a new data collection","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"Optionally, a data collection name and path can be specified with the forms:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> init [NAME]\ndata> init [PATH]\ndata> init [NAME] [PATH]\ndata> init [NAME] at [PATH]","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"Plugins can also be specified by adding a with argument,","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> init [...] with PLUGINS...","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"To omit the default set of plugins, put with -n instead, i.e.","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> init [...] with -n PLUGINS...","category":"page"},{"location":"commands/#Usage-4","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> init\ndata> init /tmp/test\ndata> init test at /tmp/test\ndata> init test at /tmp/test with plugin1 plugin2","category":"page"},{"location":"commands/#repl-list","page":"Commands","title":"?list","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"List the datasets in a certain collection","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"By default, the datasets of the active collection are shown.","category":"page"},{"location":"commands/#Usage-5","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> list (lists dataset of the active collection)\ndata> list COLLECTION","category":"page"},{"location":"commands/#repl-make","page":"Commands","title":"?make","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Create a new data set from existing information","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"This drops you into a sandbox where you can interactively develop a script to produce a new data set.","category":"page"},{"location":"commands/#Usage-6","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> make\ndata> make new_dataset_name","category":"page"},{"location":"commands/#?plugin","page":"Commands","title":"?plugin","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"  Inspect and modify the set of plugins used\n\n  Subcommand  Action                                            \n  ──────────────────────────────────────────────────────────────\n  add         Add plugins to the first data collection          \n  remove      Remove plugins from the first data collection     \n  edit        Edit the plugins used by the first data collection\n  info        Fetch the documentation of a plugin               \n  list        List the plugins used by the first data collection\n  help        Display help text for commands and transformers   \n","category":"page"},{"location":"commands/#repl-plugin-add","page":"Commands","title":"?plugin add","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Add plugins to the first data collection","category":"page"},{"location":"commands/#repl-plugin-remove","page":"Commands","title":"?plugin remove","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Remove plugins from the first data collection","category":"page"},{"location":"commands/#repl-plugin-edit","page":"Commands","title":"?plugin edit","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Edit the plugins used by the first data collection","category":"page"},{"location":"commands/#repl-plugin-info","page":"Commands","title":"?plugin info","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Fetch the documentation of a plugin","category":"page"},{"location":"commands/#repl-plugin-list","page":"Commands","title":"?plugin list","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"List the plugins used by the first data collection\n\nWith '-a'/'--availible' all loaded plugins are listed instead.","category":"page"},{"location":"commands/#repl-remove","page":"Commands","title":"?remove","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Remove a data set","category":"page"},{"location":"commands/#Usage-7","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> remove IDENTIFIER","category":"page"},{"location":"commands/#repl-search","page":"Commands","title":"?search","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Search for a particular data collection","category":"page"},{"location":"commands/#Usage-8","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> search TEXT...","category":"page"},{"location":"commands/#repl-show","page":"Commands","title":"?show","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Show the dataset refered to by an identifier","category":"page"},{"location":"commands/#Usage-9","page":"Commands","title":"Usage","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> show IDENTIFIER","category":"page"},{"location":"commands/#?stack","page":"Commands","title":"?stack","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"  Operate on the data collection stack\n\n  Subcommand  Action                                          \n  ────────────────────────────────────────────────────────────\n  list        List the data collections of the data stack     \n  promote     Move an entry up the stack                      \n  demote      Move an entry down the stack                    \n  load        Load a data collection onto the top of the stack\n  remove      Remove an entry from the stack                  \n  help        Display help text for commands and transformers \n","category":"page"},{"location":"commands/#repl-stack-promote","page":"Commands","title":"?stack promote","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Move an entry up the stack","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"An entry can be identified using any of the following:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The current position in the stack\nThe name of the data collection\nThe UUID of the data collection","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The number of positions the entry should be promoted by defaults to 1, but can optionally be specified by putting either an integer or the character * after the identifier. When * is given, the entry will be promoted to the top of the data stack.","category":"page"},{"location":"commands/#Examples-with-different-identifier-forms","page":"Commands","title":"Examples with different identifier forms","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> promote 2\ndata> promote mydata\ndata> promote 853a9f6a-cd5e-4447-a0a4-b4b2793e0a48","category":"page"},{"location":"commands/#Examples-with-different-promotion-degrees","page":"Commands","title":"Examples with different promotion degrees","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> promote mydata\ndata> promote mydata 3\ndata> promote mydata *","category":"page"},{"location":"commands/#repl-stack-demote","page":"Commands","title":"?stack demote","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Move an entry down the stack","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"An entry can be identified using any of the following:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The current position in the stack\nThe name of the data collection\nThe UUID of the data collection","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The number of positions the entry should be demoted by defaults to 1, but can optionally be specified by putting either an integer or the character * after the identifier. When * is given, the entry will be demoted to the bottom of the data stack.","category":"page"},{"location":"commands/#Examples-with-different-identifier-forms-2","page":"Commands","title":"Examples with different identifier forms","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> demote 2\ndata> demote mydata\ndata> demote 853a9f6a-cd5e-4447-a0a4-b4b2793e0a48","category":"page"},{"location":"commands/#Examples-with-different-demotion-degrees","page":"Commands","title":"Examples with different demotion degrees","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> demote mydata\ndata> demote mydata 3\ndata> demote mydata *","category":"page"},{"location":"commands/#repl-stack-load","page":"Commands","title":"?stack load","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Load a data collection onto the top of the stack","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The data collection should be given by a path to either:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"A Data TOML file\nA folder containing a 'Data.toml' file","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The path can be optionally preceeded by an position to insert the loaded collection into the stack at. The default behaviour is to put the new collection at the top of the stack.","category":"page"},{"location":"commands/#Examples-4","page":"Commands","title":"Examples","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> load path/to/mydata.toml\ndata> load 2 somefolder/","category":"page"},{"location":"commands/#repl-stack-remove","page":"Commands","title":"?stack remove","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Remove an entry from the stack","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"An entry can be identified using any of the following:","category":"page"},{"location":"commands/","page":"Commands","title":"Commands","text":"The current position in the stack\nThe name of the data collection\nThe UUID of the data collection","category":"page"},{"location":"commands/#Examples-5","page":"Commands","title":"Examples","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"data> remove 2\ndata> remove mydata\ndata> remove 853a9f6a-cd5e-4447-a0a4-b4b2793e0a48","category":"page"},{"location":"commands/#repl-help","page":"Commands","title":"?help","text":"","category":"section"},{"location":"commands/","page":"Commands","title":"Commands","text":"Display help information on the available Data REPL commands\n\nFor convenience, help information can also be accessed via '?', e.g. '?help'.\n\nHelp for data transformers can also be accessed by asking for the help of the\ntransformer name prefixed by ':' (i.e. ':transformer'), and a list of documented\ntransformers can be pulled up with just ':'.\n\nUsage\n=====\n\ndata> help\ndata> help CMD\ndata> help PARENT CMD\ndata> PARENT help CMD\ndata> help :\ndata> help :TRANSFORMER\n","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"EditURL=\"index.org\"","category":"page"},{"location":"#The-Data-REPL","page":"Introduction","title":"The Data REPL","text":"","category":"section"},{"location":"#General-design","page":"Introduction","title":"General design","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"An extensible \"Data REPL\" is provided to make directly interacting with the Data.toml a bit more convenient. It can be entered by pressing } on an empty julia> REPL line.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"julia> # type }\ndata>\ndata> help\n Command  Action\n ───────────────────────────────────────────────────────────\n help     Display help information on the available commands","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The foremost data collection is also listed in the prompt in much the same manner as (environment) pkg>, i.e.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"(⋅) data>        # No currently loaded data collections\n(example) data>  # The top data collection is \"example\"","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Commands (and sub-commands) can be triggered by typing them out in full (i.e. cmd args...) but also abbreviated up to the unique stem. For instance if cmd is the only command starting with c, then it can be called with any of","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"data> cmd args...\ndata> cm args...\ndata> c args...","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"However, should a command conflict also exist, then c is no longer a unique stem and so c args... will produce an error message like so:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"data> c args...\n ! Multiple matching Data REPL commands: cmd, conflict","category":"page"},{"location":"#The-help-command","page":"Introduction","title":"The help command","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"help is implemented specially in the Data REPL. It can be invoked normally (i.e. help cmd) but also with ? prefix (i.e. ?cmd). Furthermore, all commands with sub-commands with automatically have a help sub-command added. Overall, help supports the following usage patterns.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"data> help             # List available commands.\ndata> help cmd         # Obtain the help for cmd, or\ndata> help cmd         # list available sub-command (if applicable).\ndata> ?cmd             # Obtain the help for cmd.\ndata> help cmd subcmd  # Obtain the help for subcmd.\ndata> ?cmd subcmd      # Obtain the help for subcmd.\ndata> cmd help subcmd  # Obtain the help for subcmd.\ndata> cmd ?subcmd      # Obtain the help for subcmd.","category":"page"},{"location":"#Extending-the-Data-REPL","page":"Introduction","title":"Extending the Data REPL","text":"","category":"section"},{"location":"#Registering-commands","page":"Introduction","title":"Registering commands","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"To register a command, one simply needs to push a ReplCmd onto REPL_CMDS.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"REPL_CMDS\nReplCmd","category":"page"},{"location":"#DataToolkitREPL.REPL_CMDS","page":"Introduction","title":"DataToolkitREPL.REPL_CMDS","text":"The set of commands available directly in the Data REPL.\n\n\n\n\n\n","category":"constant"},{"location":"#DataToolkitREPL.ReplCmd","page":"Introduction","title":"DataToolkitREPL.ReplCmd","text":"A command that can be used in the Data REPL (accessible through '}').\n\nA ReplCmd consists of the following fields:\n\nname, a string that designates the command, and triggers it in the repl\ndescription, a short overview of the functionality as a string or displayable object.\nexecute, either a list of sub-ReplCmds, or a function which will perform the command's action. The function must take a single argument, the rest of the command as an AbstractString (for example, 'cmd arg1 arg2' will call the execute function with \"arg1 arg2\").\ncompletions (optional), a function that takes a partial argument string and returns a list of candidate completions.\n\nReplCmd(name::String, description::String, execute::Function, [completions::Function])\nReplCmd(name::String, description::String, execute::Vector{ReplCmd})\n\nExamples\n\nReplCmd(\"echo\", \"print the argument\", identity)\n\nReplCmd(\"math\", \"A collection of basic integer arithmetic\",\n    [ReplCmd(\"add\", \"a + b + ...\", nums -> sum(parse.(Int, split(nums))))],\n     ReplCmd(\"mul\", \"a * b * ...\", nums -> prod(parse.(Int, split(nums)))))\n\n\n\n\n\n","category":"type"},{"location":"#Helper-functions","page":"Introduction","title":"Helper functions","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"To create a pleasant user interface, a number of utility functions are provided.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"prompt\nprompt_char\nconfirm_yn\npeelword","category":"page"},{"location":"#DataToolkitREPL.prompt","page":"Introduction","title":"DataToolkitREPL.prompt","text":"prompt(question::AbstractString, default::AbstractString=\"\",\n       allowempty::Bool=false, cleardefault::Bool=true,\n       multiline::Bool=false)\n\nInteractively ask question and return the response string, optionally with a default value. If multiline is true, RET must be pressed twice consecutively to submit a value.\n\nUnless allowempty is set an empty response is not accepted. If cleardefault is set, then an initial backspace will clear the default value.\n\nThe prompt supports the following line-edit-y keys:\n\nleft arrow\nright arrow\nhome\nend\ndelete forwards\ndelete backwards\n\nExample\n\njulia> prompt(\"What colour is the sky? \")\nWhat colour is the sky? Blue\n\"Blue\"\n\n\n\n\n\n","category":"function"},{"location":"#DataToolkitREPL.prompt_char","page":"Introduction","title":"DataToolkitREPL.prompt_char","text":"prompt_char(question::AbstractString, options::Vector{Char},\n            default::Union{Char, Nothing}=nothing)\n\nInteractively ask question, only accepting options keys as answers. All keys are converted to lower case on input. If default is not nothing and 'RET' is hit, then default will be returned.\n\nShould '^C' be pressed, an InterruptException will be thrown.\n\n\n\n\n\n","category":"function"},{"location":"#DataToolkitREPL.confirm_yn","page":"Introduction","title":"DataToolkitREPL.confirm_yn","text":"confirm_yn(question::AbstractString, default::Bool=false)\n\nInteractively ask question and accept y/Y/n/N as the response. If any other key is pressed, then default will be taken as the response. A \" [y/n]: \" string will be appended to the question, with y/n capitalised to indicate the default value.\n\nExample\n\njulia> confirm_yn(\"Do you like chocolate?\", true)\nDo you like chocolate? [Y/n]: y\ntrue\n\n\n\n\n\n","category":"function"},{"location":"#DataToolkitREPL.peelword","page":"Introduction","title":"DataToolkitREPL.peelword","text":"peelword(input::AbstractString)\n\nRead the next 'word' from input. If input starts with a quote, this is the unescaped text between the opening and closing quote. Other wise this is simply the next word.\n\nReturns a tuple of the form (word, rest).\n\nExample\n\njulia> peelword(\"one two\")\n(\"one\", \"two\")\n\njulia> peelword(\"\"one two\" three\")\n(\"one two\", \"three\")\n\n\n\n\n\n","category":"function"},{"location":"#Simple-example","page":"Introduction","title":"Simple example","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"In the below example we will extend the Data REPL by adding a command cowsay which simply call the (assumed to be installed) system cowsay executable.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"function cowsay_repl(input::AbstractString)\n    if isempty(input)\n        confirm_yn(\"Are you ready to hear your fortune?\", true) &&\n            cowsay_repl(read(`fortune`, String))\n    else\n        println(read(`cowsay $input`, String))\n    end\nend\n\ncowsay3 = ReplCmd(\n    \"cowsay3\",\n    \"Hear what the cow has to say\n\\n Call with no argument to obtain a fortune.\",\n    cowsay_repl,\n    [\"Improve your data management with DataToolkits & co.\"])\n\npush!(REPL_CMDS, cowsay3)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"If you enter the Data REPL, you will be able to note that:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"cowsay is listed in data> help\nrunning cowsay with no arguments results in a Y/n prompt to show a fortune\npressing TAB after cowsay fills in the sole completion, Improve your data   management with DataToolkits & co..","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"(⋅) data> help\n Command  Action\n ───────────────────────────────────────────────────────────\n cowsay   Hear what the cow has to say\n help     Display help information on the available commands\n\n(⋅) data> ?cowsay3\n Hear what the cow has to say\n\n Call with no argument to obtain a fortune.\n\n(⋅) data> cowsay\nAre you ready to hear your fortune? [Y/n]: y\n _________________________________________\n/ (1) A sheet of paper is an ink-lined    \\\n| plane. (2) An inclined plane is a slope |\n| up. (3) A slow pup is a lazy dog.       |\n|                                         |\n| QED: A sheet of paper is a lazy dog.    |\n|                                         |\n| -- Willard Espy, \"An Almanac of Words   |\n\\ at Play\"                                /\n -----------------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n","category":"page"}]
}
