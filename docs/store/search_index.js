var documenterSearchIndex = {"docs":
[{"location":"plugin_cache/","page":"Cache","title":"Cache","text":"EditURL=\"plugin_cache.org\"","category":"page"},{"location":"plugin_cache/#Cache","page":"Cache","title":"Cache","text":"","category":"section"},{"location":"plugin_cache/","page":"Cache","title":"Cache","text":"Main.DataToolkitStore.pdocs(\"cache\")","category":"page"},{"location":"plugin_store/","page":"Store","title":"Store","text":"EditURL=\"plugin_store.org\"","category":"page"},{"location":"plugin_store/#Store","page":"Store","title":"Store","text":"","category":"section"},{"location":"plugin_store/","page":"Store","title":"Store","text":"Main.DataToolkitStore.pdocs(\"store\")","category":"page"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"EditURL=\"repl.org\"","category":"page"},{"location":"repl/#REPL-Commands","page":"REPL Commands","title":"REPL Commands","text":"","category":"section"},{"location":"repl/#?store","page":"REPL Commands","title":"?store","text":"","category":"section"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"  Manipulate the data store\n\n  Subcommand  Action                                         \n  ───────────────────────────────────────────────────────────\n  config      Manage configuration                           \n  expunge     Remove a data collection from the store        \n  fetch       Fetch data storage sources                     \n  gc          Garbage Collect                                \n  stats       Show statistics about the data store           \n  help        Display help text for commands and transformers\n","category":"page"},{"location":"repl/#repl-store-config","page":"REPL Commands","title":"?store config","text":"","category":"section"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"Manage configuration","category":"page"},{"location":"repl/#repl-store-expunge","page":"REPL Commands","title":"?store expunge","text":"","category":"section"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"Remove a data collection from the store","category":"page"},{"location":"repl/#Usage","page":"REPL Commands","title":"Usage","text":"","category":"section"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"data> expunge [collection name or UUID]","category":"page"},{"location":"repl/#repl-store-gc","page":"REPL Commands","title":"?store gc","text":"","category":"section"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"Garbage Collect","category":"page"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"Scan the inventory and perform a garbage collection sweep.","category":"page"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"Optionally provide the -d/--dryrun flag to prevent file deletion.","category":"page"},{"location":"repl/#repl-store-stats","page":"REPL Commands","title":"?store stats","text":"","category":"section"},{"location":"repl/","page":"REPL Commands","title":"REPL Commands","text":"Show statistics about the data store","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"EditURL=\"index.org\"","category":"page"},{"location":"#DataToolkitStore","page":"Introduction","title":"DataToolkitStore","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Together, DataToolkitCore and DataToolkitCommon provide a convenient way of obtaining data. However, what about the second and third time you want to access the same data set? What if you have a large data set referenced in multiple projects, do you really want several identical copies?","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"These are the concerns that DataToolkitStore sets out to address, by providing an central (managed) content/recipe-addressed store of data sources.","category":"page"},{"location":"#Design","page":"Introduction","title":"Design","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"The management will be based on an \"Inventory file\" that contains all the requisite information on the data collections being stored. Management will occur automatically when the interacting with the store, but management functions will also be made available in the form of an API, and REPL commands.","category":"page"},{"location":"#API","page":"Introduction","title":"API","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"DataToolkitStore.load_inventory\nDataToolkitStore.fetch!","category":"page"},{"location":"#DataToolkitStore.load_inventory","page":"Introduction","title":"DataToolkitStore.load_inventory","text":"load_inventory(path::String, create::Bool=true)\n\nLoad the inventory at path. If it does not exist, it will be created so long as create is set to true.\n\n\n\n\n\n","category":"function"},{"location":"#DataToolkitStore.fetch!","page":"Introduction","title":"DataToolkitStore.fetch!","text":"fetch!(storer::DataStorage)\n\nIf storer is storable (either by default, or explicitly enabled), open it, and presumably save it in the Store along the way.\n\n\n\n\n\nfetch!(dataset::DataSet)\n\nCall fetch! on each storage backend of dataset.\n\n\n\n\n\nfetch!(collection::DataCollection)\n\nWhen collection uses the store plugin, call fetch! on all of its data sets.\n\n\n\n\n\n","category":"function"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"EditURL=\"inventory.org\"","category":"page"},{"location":"inventory/#The-Inventory","page":"The Inventory","title":"The Inventory","text":"","category":"section"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"The store needs a way of keeping track of which data sources are actively being used, and which are orphaned. To do this, we need to keep track of two things:","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"The data sources being stored\nThe data collections using those data sources","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"Essentially we need a \"stock list\" for our data sources, or a \"data inventory\", and this is what the Inventory.toml file functions as.","category":"page"},{"location":"inventory/#Format-of-the-Inventory-file","page":"The Inventory","title":"Format of the Inventory file","text":"","category":"section"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"The inventory file needs to contain three categories of information:","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"Configuration (e.g. how long data should \"expire\" after): config\nKnown data collections: collections\nStored entries: store and cache","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"Configuration is stored in a simple TOML table, and currently recognises the following attributes:","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"auto_gc\nmax_age\nmax_size\nrecency_beta\nstore_dir\ncache_dir","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"Known collections are also stored in a TOML table, using the collection UUIDs as keys. The name, collection source path, and a timestamp of the last access are recorded under the keys name, path, and seen respectively.","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"Entries of the inventory are recorded in two arrays of tables: store and cache. These tables share three common attributes:","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"recipie, a (fairly stable) hash of the inputs and parameters that lead to the object being stored\naccessed, a time stamp of the last access time\nreferences, a list of collections that reference the object, by UUID","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"The store tables extend the common trio with an optional checksum attribute, as well as an optional file extension attribute.","category":"page"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"The cache tables extend the common trio with a list of the types involved, typehashes of their structure, and packages involved.","category":"page"},{"location":"inventory/#Example-Inventory-file","page":"The Inventory","title":"Example Inventory file","text":"","category":"section"},{"location":"inventory/","page":"The Inventory","title":"The Inventory","text":"inventory_version = 1\n\n[config]\nmax_age = 30\n# ...\n\n[collections.d0c50be9-f198-43c6-9411-63aaecb83ed0]\nname = \"known-collection\"\npath = \"/absolute/path/to/Data.toml\"\nseen = 2023-08-12T17:34:56.816Z\n# ...\n\n[[store]]\nrecipe = \"15edb3448b1460c8\"\naccessed = 2023-08-12T17:34:56.816Z\nreferences = [\"d0c50be9-f198-43c6-9411-63aaecb83ed0\"]\nchecksum = \"k12:d8e04889edd692e1f36dfac9cc7e73b0\"\nextension = \"csv\"\n# ...\n\n[[cache]]\nrecipe = \"e41acbb05ac155d1\"\naccessed = 2024-06-04T19:35:57.074Z\nreferences = [\"d0c50be9-f198-43c6-9411-63aaecb83ed0\"]\ntypes = [\"Array{Any,2}\", \"InlineStrings.String15\"]\ntypehashes = [\"5420e006bc4fe707\", \"ad994c6b8c7e2324\"]\n\n    [[cache.packages]]\n    name = \"InlineStrings\"\n    uuid = \"842dd82b-1e85-43dc-bf29-5d0ee9dffc48\"\n# ...","category":"page"}]
}
