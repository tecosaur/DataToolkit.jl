var documenterSearchIndex = {"docs":
[{"location":"saveload/sqlite/#saveload-sqlite","page":"Sqlite","title":"Sqlite","text":"","category":"section"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"Load and write data from/to an SQLite database file","category":"page"},{"location":"saveload/sqlite/#Input/output","page":"Sqlite","title":"Input/output","text":"","category":"section"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"The sqlite driver expects to be provided a path to an SQLite database file.","category":"page"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"By default this driver announces support for parsing to three data types:","category":"page"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"SQLite.DB\nDataFrame\nAny","category":"page"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"Any valid constructor that can be applied to the results of DBInterface.execute will work.","category":"page"},{"location":"saveload/sqlite/#Required-packages","page":"Sqlite","title":"Required packages","text":"","category":"section"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"SQLite","category":"page"},{"location":"saveload/sqlite/#Parameters","page":"Sqlite","title":"Parameters","text":"","category":"section"},{"location":"saveload/sqlite/#Loader-and-Writer","page":"Sqlite","title":"Loader and Writer","text":"","category":"section"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"table: The table to act on, data by default.","category":"page"},{"location":"saveload/sqlite/#Loader-only","page":"Sqlite","title":"Loader only","text":"","category":"section"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"columns: columns to select, * by default.\nquery: an SQLite query to run. When provided this overrides the table and columns parameters.","category":"page"},{"location":"saveload/sqlite/#Writer-only","page":"Sqlite","title":"Writer only","text":"","category":"section"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"ifnotexists: see the documentation for SQLite.load!.\nanalyze: see the documentation for SQLite.load!.","category":"page"},{"location":"saveload/sqlite/#Usage-examples","page":"Sqlite","title":"Usage examples","text":"","category":"section"},{"location":"saveload/sqlite/","page":"Sqlite","title":"Sqlite","text":"[[iris.loader]]\ndriver = \"sqlite\"\ncolumns = [\"sepal_length\", \"species\"]","category":"page"},{"location":"saveload/tar/#saveload-tar","page":"Tar","title":"Tar","text":"","category":"section"},{"location":"saveload/tar/","page":"Tar","title":"Tar","text":"Load the contents of a Tarball.","category":"page"},{"location":"saveload/tar/#Input/output","page":"Tar","title":"Input/output","text":"","category":"section"},{"location":"saveload/tar/","page":"Tar","title":"Tar","text":"The zip driver expects data to be provided via IO or a FilePath.","category":"page"},{"location":"saveload/tar/","page":"Tar","title":"Tar","text":"It can load the contents to the following formats:","category":"page"},{"location":"saveload/tar/","page":"Tar","title":"Tar","text":"Dict{FilePath, IO}\nDict{FilePath, Vector{UInt8}}\nDict{FilePath, String}\nDict{String, IO}\nDict{String, Vector{UInt8}}\nDict{String, String}\nIO (single file)\nVector{UInt8} (single file)\nString (single file)","category":"page"},{"location":"saveload/tar/#Required-packages","page":"Tar","title":"Required packages","text":"","category":"section"},{"location":"saveload/tar/","page":"Tar","title":"Tar","text":"Tar (the stdlib)","category":"page"},{"location":"saveload/tar/#Parameters","page":"Tar","title":"Parameters","text":"","category":"section"},{"location":"saveload/tar/","page":"Tar","title":"Tar","text":"file: the file in the zip whose contents should be extracted, when producing IO.","category":"page"},{"location":"saveload/tar/#Usage-examples","page":"Tar","title":"Usage examples","text":"","category":"section"},{"location":"saveload/tar/","page":"Tar","title":"Tar","text":"[[dictionary.loader]]\ndriver = \"tar\"\nfile = \"dictionary.txt\"","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"EditURL=\"/home/runner/work/DataToolkit.jl/DataToolkit.jl/Common/docs/src/contributing.org\"","category":"page"},{"location":"contributing/#Contributing","page":"Contributing","title":"Contributing","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"This is a guide for contributing to DataToolkitCommon. It is intended to make it easier to contribute new transformers and plugins, but may also be of some general interest.","category":"page"},{"location":"contributing/#Using-the-development-versions-of-everything","page":"Contributing","title":"Using the development versions of everything","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Given the inter-dependent packages and monorepo setup, the easiest way to use the development version of everything is by pasting the following into a Project.toml:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"[deps]\nDataToolkit = \"dc83c90b-d41d-4e55-bdb7-0fc919659999\"\nDataToolkitBase = \"e209d0c3-e863-446f-9b45-de6ca9730756\"\nDataToolkitCommon = \"9e6fccbf-6142-406a-aa4c-75c1ae647f53\"\nDataToolkitCore = \"caac3e55-418c-402e-a061-64d454aa8f4f\"\nDataToolkitREPL = \"c58528a0-97a2-40a0-9a44-056fe1196995\"\nDataToolkitStore = \"082ec3c2-3fb3-458f-ad22-5e5e31d4377a\"\n\n[sources]\nDataToolkit = {url = \"https://github.com/tecosaur/DataToolkit.jl.git\", subdir=\"Main\"}\nDataToolkitBase = {url = \"https://github.com/tecosaur/DataToolkit.jl.git\", subdir=\"Base\"}\nDataToolkitCommon = {url = \"https://github.com/tecosaur/DataToolkit.jl.git\", subdir=\"Common\"}\nDataToolkitCore = {url = \"https://github.com/tecosaur/DataToolkit.jl.git\", subdir=\"Core\"}\nDataToolkitREPL = {url = \"https://github.com/tecosaur/DataToolkit.jl.git\", subdir=\"REPL\"}\nDataToolkitStore = {url = \"https://github.com/tecosaur/DataToolkit.jl.git\", subdir=\"Store\"}","category":"page"},{"location":"contributing/#Creating-a-new-transformer","page":"Contributing","title":"Creating a new transformer","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Say there's a format you're familiar with or need to work with that's relatively common and not (yet) supported out-of-the-box by DataToolkitCommon. This is a great oppotunity to spin up a PR adding support ðŸ˜‰. If you get stuck on anything, just open an issue or DM me (@tecosaur on Zulip, Slack, and more) and I'll happily see if I can help ðŸ™‚.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"I always appreciate the value of a good example. Here are some transformers that I think might be helpful as a point of reference:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The filesystem storage\nThe arrow loader and writer","category":"page"},{"location":"contributing/#Loader","page":"Contributing","title":"Loader","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Create a new file src/transformers/saveload/{name}.jl\nAdd an include(\"src/transformers/saveload/{name}.jl\") line to src/DataToolkitCommon.jl (maintaining the sorted order)\nDecide whether you want to use an extra package, if so: a. With DataToolkitCommon as the current project, in the Pkg repl run    add --weak {MyPkg} b. Modify the Project.toml to add a {MyPkg}Ext to the [extensions]    section c. Create ext/{MyPkg}Ext.jl d. Add a stub method to saveload/{name}.jl, and implement it in    ext/{MyPkg}Ext.jl e. Use @require {MyPkg} at the start of your load method implementation f. Add a @addpkg {MyPkg} {UUID} line to the __init__ method in    src/DataToolkitCommon.jl (maintaining the sorted order)\nImplement one or more load methods for DataLoader{:name}. Use @getparam if you want to access parameters of the loader or dataset.\nIf you implemented multiple load methods, consider whether it would also be appropriate to implement a specialised supportedtypes method.\nConsider whether there is a reasonable implementation of createauto you could write.\nAt the end of the file, assign a docstring to a const using the form const {name}_DOC = md\"\"\"...\"\"\", and update the append!(DataToolkitCore.TRANSFORMER_DOCUMENTATION, [...]) call in src/DataToolkitCommon.jl's __init__ method appropriately.\nAdd \"{name}\" to the DocSaveload list in docs/make.jl\nFor brownie points: find a test file for the new loader and PR it to DataToolkitTestAssets and write a test using it.","category":"page"},{"location":"contributing/#Storage","page":"Contributing","title":"Storage","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The same as the loader steps, except:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You want to create the file src/transformers/storage/{name}.jl\nYou want to implement either:\nstorage\ngetstorage and/or putstorage\nAdd \"{name}\" to DocStorage instead of DocSaveload in docs/make.jl","category":"page"},{"location":"contributing/#Writer","page":"Contributing","title":"Writer","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The same as the loader steps, except:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"You want to implement save","category":"page"},{"location":"contributing/#Creating-a-new-plugin","page":"Contributing","title":"Creating a new plugin","text":"","category":"section"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"If you feel like DataToolkit lacks something, not support for a certain support/storage provider, but some more fundamental behaviour â€” it's entirely likely this behaviour can be added in via a Plugin.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Depending on the behaviour you have in mind, implementing a plugin can take five minutes and be just a dozen or two lines total, or something much larger (like DataToolkitStore). Feel free to reach out to me for a chat if you're not sure whether or how something can be done ðŸ™‚.","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"The plugins in src/plugins/ should provide an indication of what implementing a plugin can look like. The broad strokes look something like this though:","category":"page"},{"location":"contributing/","page":"Contributing","title":"Contributing","text":"Compare the behaviour in your mind to the join points currently available, and contemplate which of them would need to be changed to accomidate your target behaviour\nCreate src/plugins/{name}.jl, and implement advice functions that modify the identified join points\nConstruct a Plugin and assign it to a const variable with a docstring\nAdd a include(\"plugins/myplugin.jl\") line to src/DataToolkitCommon.jl, and @dataplugin MY_PLUGIN line to the __init__ function (around the middle, with the other plugins).\nAdd the plugin to the DocPlugins list in docs/make.jl, providing a mapping from the display name to the actual name.","category":"page"},{"location":"storage/web/#storage-web","page":"Web","title":"Web","text":"","category":"section"},{"location":"storage/web/","page":"Web","title":"Web","text":"Fetch data from the internet","category":"page"},{"location":"storage/web/","page":"Web","title":"Web","text":"This pairs well with the store plugin.","category":"page"},{"location":"storage/web/#Required-packages","page":"Web","title":"Required packages","text":"","category":"section"},{"location":"storage/web/","page":"Web","title":"Web","text":"Downloads (part of Julia's stdlib)","category":"page"},{"location":"storage/web/#Parameters","page":"Web","title":"Parameters","text":"","category":"section"},{"location":"storage/web/","page":"Web","title":"Web","text":"url :: Path to the online data.\nheaders :: HTTP headers that should be set.\ntimeout :: Maximum number of seconds to try to download for before abandoning.","category":"page"},{"location":"storage/web/#Usage-examples","page":"Web","title":"Usage examples","text":"","category":"section"},{"location":"storage/web/","page":"Web","title":"Web","text":"Downloading the data on-demand each time it is accessed.","category":"page"},{"location":"storage/web/","page":"Web","title":"Web","text":"[[iris.storage]]\ndriver = \"web\"\nurl = \"https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv\"","category":"page"},{"location":"saveload/arrow/#saveload-arrow","page":"Arrow","title":"Arrow","text":"","category":"section"},{"location":"saveload/arrow/","page":"Arrow","title":"Arrow","text":"Parse and serialize arrow files","category":"page"},{"location":"saveload/arrow/#Input/output","page":"Arrow","title":"Input/output","text":"","category":"section"},{"location":"saveload/arrow/","page":"Arrow","title":"Arrow","text":"The arrow driver expects data to be provided via IO.","category":"page"},{"location":"saveload/arrow/","page":"Arrow","title":"Arrow","text":"By default this driver supports parsing to two data types:","category":"page"},{"location":"saveload/arrow/","page":"Arrow","title":"Arrow","text":"DataFrame\nArrow.Table","category":"page"},{"location":"saveload/arrow/#Required-packages","page":"Arrow","title":"Required packages","text":"","category":"section"},{"location":"saveload/arrow/","page":"Arrow","title":"Arrow","text":"Arrow","category":"page"},{"location":"saveload/arrow/#Parameters","page":"Arrow","title":"Parameters","text":"","category":"section"},{"location":"saveload/arrow/","page":"Arrow","title":"Arrow","text":"convert: controls whether certain arrow primitive types will be converted to more friendly Julia defaults\nThe writer mirrors the arguments available in Arrow.write.","category":"page"},{"location":"saveload/arrow/#Usage-examples","page":"Arrow","title":"Usage examples","text":"","category":"section"},{"location":"saveload/arrow/","page":"Arrow","title":"Arrow","text":"[[iris.loader]]\ndriver = \"arrow\"","category":"page"},{"location":"saveload/json/#saveload-json","page":"Json","title":"Json","text":"","category":"section"},{"location":"saveload/json/","page":"Json","title":"Json","text":"Parse and serialize JSON data","category":"page"},{"location":"saveload/json/#Input/output","page":"Json","title":"Input/output","text":"","category":"section"},{"location":"saveload/json/","page":"Json","title":"Json","text":"The json driver expects data to be provided via IO.","category":"page"},{"location":"saveload/json/","page":"Json","title":"Json","text":"It will parse to a number of types depending on the input:","category":"page"},{"location":"saveload/json/","page":"Json","title":"Json","text":"JSON3.Object\nJSON3.Array\nString\nNumber\nBoolean\nNothing","category":"page"},{"location":"saveload/json/","page":"Json","title":"Json","text":"If you do not wish to impose any expectations on the parsed type, you can ask for the data of type Any.","category":"page"},{"location":"saveload/json/","page":"Json","title":"Json","text":"When writing, any type compatible with JSON3.write can be used directly, with any storage backend supporting IO.","category":"page"},{"location":"saveload/json/#Required-packages","page":"Json","title":"Required packages","text":"","category":"section"},{"location":"saveload/json/","page":"Json","title":"Json","text":"JSON3","category":"page"},{"location":"saveload/json/#Parameters","page":"Json","title":"Parameters","text":"","category":"section"},{"location":"saveload/json/","page":"Json","title":"Json","text":"pretty: Whether to use JSON3.pretty when writing","category":"page"},{"location":"saveload/json/#Usage-examples","page":"Json","title":"Usage examples","text":"","category":"section"},{"location":"saveload/json/","page":"Json","title":"Json","text":"[[sample.loader]]\ndriver = \"json\"","category":"page"},{"location":"plugins/memorise/#plugin-memorise","page":"Memorise","title":"Memorise","text":"","category":"section"},{"location":"plugins/memorise/","page":"Memorise","title":"Memorise","text":"info: Using this plugin\nTo use the plugin, either modify the plugins entry of the collection's Data.toml to include \"memorise\", or use the Data REPL's plugin add/plugin remove subcommands.","category":"page"},{"location":"plugins/memorise/","page":"Memorise","title":"Memorise","text":"Cache the results of data loaders in memory. This requires (dataset::DataSet, as::Type) to consistently identify the same loaded information.","category":"page"},{"location":"plugins/memorise/#Enabling-caching-of-a-dataset","page":"Memorise","title":"Enabling caching of a dataset","text":"","category":"section"},{"location":"plugins/memorise/","page":"Memorise","title":"Memorise","text":"[[mydata]]\nmemorise = true","category":"page"},{"location":"plugins/memorise/","page":"Memorise","title":"Memorise","text":"memorise can be a boolean value, a type that should be memorised, or a list of types to be memorised.","category":"page"},{"location":"plugins/versions/#plugin-versions","page":"Versions","title":"Versions","text":"","category":"section"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"info: Using this plugin\nTo use the plugin, either modify the plugins entry of the collection's Data.toml to include \"versions\", or use the Data REPL's plugin add/plugin remove subcommands.","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"Give data sets versions, and identify them by version.","category":"page"},{"location":"plugins/versions/#Giving-data-sets-a-version","page":"Versions","title":"Giving data sets a version","text":"","category":"section"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"Multiple editions of a data set can be described by using the same name, but setting the version parameter to differentiate them.","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"For instance, say that Ronald Fisher released a second version of the \"Iris\" data set, with more flowers. We could specify this as:","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"[[iris]]\nversion = \"1\"\n...\n\n[[iris]]\nversion = \"2\"\n...","category":"page"},{"location":"plugins/versions/#Matching-by-version","page":"Versions","title":"Matching by version","text":"","category":"section"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"Version matching is done via the Identifier parameter \"version\". As shorthand, instead of providing the \"version\" parameter manually, the version can be tacked onto the end of an identifier with @, e.g. iris@1 or iris@2.","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"The version matching re-uses machinery from Pkg, and so all Pkg-style version specifications are supported, with two notable differences:","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"In addition to numeric versioning, you can just ask for the \"latest\" version\nNumeric versions with no explicit scheme are matched up to the level of granularity explicitly provided. For instance, @1 will match all 1.x.x versions and @1.2 will match all 1.2.x versions.","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"The following are all valid identifiers, using the @-shorthand:","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"iris@1\niris@~1\niris@>=2\niris@latest","category":"page"},{"location":"plugins/versions/","page":"Versions","title":"Versions","text":"When multiple data sets match the version specification, the one with the highest matching version is used.","category":"page"},{"location":"saveload/iotofile/#saveload-io-to-file","page":"IO to File","title":"IO to File","text":"","category":"section"},{"location":"saveload/iotofile/","page":"IO to File","title":"IO to File","text":"Obtain an IO as a FilePath","category":"page"},{"location":"saveload/iotofile/","page":"IO to File","title":"IO to File","text":"The io->file loader serves as a bridge between and backends that produce IO but not a file path, and any subsequent transformers that require a file.","category":"page"},{"location":"saveload/iotofile/","page":"IO to File","title":"IO to File","text":"If a FilePath can be provided directly, io->file will be sneaky and just create a symlink.","category":"page"},{"location":"saveload/iotofile/","page":"IO to File","title":"IO to File","text":"warn: Warn\nIf a file with the given path already exists, it is possible for the content to become out of date, set rewrite to write the file every access and so avoid this potential issue. This is not a risk in the symlink case.","category":"page"},{"location":"saveload/iotofile/#Input/output","page":"IO to File","title":"Input/output","text":"","category":"section"},{"location":"saveload/iotofile/","page":"IO to File","title":"IO to File","text":"The io->file driver accepts IO and produces a FilePath.","category":"page"},{"location":"saveload/iotofile/#Parameters","page":"IO to File","title":"Parameters","text":"","category":"section"},{"location":"saveload/iotofile/","page":"IO to File","title":"IO to File","text":"path: A path to save the file to. If not set, a tempfile will be used.\nrewrite: Whether the any existing file should be overwritten afresh on each access.","category":"page"},{"location":"saveload/jpeg/#saveload-jpeg","page":"Jpeg","title":"Jpeg","text":"","category":"section"},{"location":"saveload/jpeg/","page":"Jpeg","title":"Jpeg","text":"Encode and decode JPEG images","category":"page"},{"location":"saveload/jpeg/#Input/output","page":"Jpeg","title":"Input/output","text":"","category":"section"},{"location":"saveload/jpeg/","page":"Jpeg","title":"Jpeg","text":"The jpeg driver expects data to be provided via IO.","category":"page"},{"location":"saveload/jpeg/","page":"Jpeg","title":"Jpeg","text":"It will parse to a Matrix{<:Colorant}.","category":"page"},{"location":"saveload/jpeg/#Required-packages","page":"Jpeg","title":"Required packages","text":"","category":"section"},{"location":"saveload/jpeg/","page":"Jpeg","title":"Jpeg","text":"JpegTurbo","category":"page"},{"location":"saveload/jpeg/#Parameters","page":"Jpeg","title":"Parameters","text":"","category":"section"},{"location":"saveload/jpeg/#Reader","page":"Jpeg","title":"Reader","text":"","category":"section"},{"location":"saveload/jpeg/","page":"Jpeg","title":"Jpeg","text":"transpose: Whether to permute the image's width and height dimension\nscale_ratio: scale the image this ratio in M/8 with M âˆˆ 1:16 (values will be mapped to the closest value)\ngrayscale: Whether to process the image in grayscale","category":"page"},{"location":"saveload/jpeg/#Writer","page":"Jpeg","title":"Writer","text":"","category":"section"},{"location":"saveload/jpeg/","page":"Jpeg","title":"Jpeg","text":"transpose: Whether to permute the image's width and height dimension\nquality: The IJG-scale JPEG quality value, between 0 and 100.","category":"page"},{"location":"saveload/jpeg/#Usage-examples","page":"Jpeg","title":"Usage examples","text":"","category":"section"},{"location":"saveload/jpeg/","page":"Jpeg","title":"Jpeg","text":"[[someimage.loader]]\ndriver = \"jpeg\"","category":"page"},{"location":"saveload/passthrough/#saveload-passthrough","page":"Passthrough","title":"Passthrough","text":"","category":"section"},{"location":"saveload/passthrough/","page":"Passthrough","title":"Passthrough","text":"Simply passes on data to/from the storage backend","category":"page"},{"location":"saveload/passthrough/#Input/output","page":"Passthrough","title":"Input/output","text":"","category":"section"},{"location":"saveload/passthrough/","page":"Passthrough","title":"Passthrough","text":"Identical to that of the storage.","category":"page"},{"location":"saveload/passthrough/#Usage-examples","page":"Passthrough","title":"Usage examples","text":"","category":"section"},{"location":"saveload/passthrough/","page":"Passthrough","title":"Passthrough","text":"[[magicvalue.loader]]\ndriver = \"passthrough\"","category":"page"},{"location":"saveload/zip/#saveload-zip","page":"Zip","title":"Zip","text":"","category":"section"},{"location":"saveload/zip/","page":"Zip","title":"Zip","text":"Load the contents of zipped data","category":"page"},{"location":"saveload/zip/#Input/output","page":"Zip","title":"Input/output","text":"","category":"section"},{"location":"saveload/zip/","page":"Zip","title":"Zip","text":"The zip driver expects data to be provided via IO or a FilePath.","category":"page"},{"location":"saveload/zip/","page":"Zip","title":"Zip","text":"It can load the contents to the following formats:","category":"page"},{"location":"saveload/zip/","page":"Zip","title":"Zip","text":"Dict{FilePath, IO},\nDict{String, IO},\nIO,\nan unzipped FilePath,\nan unzipped DirPath.","category":"page"},{"location":"saveload/zip/#Required-packages","page":"Zip","title":"Required packages","text":"","category":"section"},{"location":"saveload/zip/","page":"Zip","title":"Zip","text":"ZipFile","category":"page"},{"location":"saveload/zip/#Parameters","page":"Zip","title":"Parameters","text":"","category":"section"},{"location":"saveload/zip/","page":"Zip","title":"Zip","text":"prefix: a path prefix applied to file, and stripped from paths when reading to a Dict.\nfile: the file in the zip whose contents should be extracted, when producing IO.\nextract: the path that the zip should be extracted to, when producing an unzipped FilePath.\nrecursive: when extracting to a FilePath, whether nested zips should be unzipped too.","category":"page"},{"location":"saveload/zip/#Usage-examples","page":"Zip","title":"Usage examples","text":"","category":"section"},{"location":"saveload/zip/","page":"Zip","title":"Zip","text":"[[dictionary.loader]]\ndriver = \"zip\"\nfile = \"dictionary.txt\"","category":"page"},{"location":"storage/filesystem/#storage-filesystem","page":"Filesystem","title":"Filesystem","text":"","category":"section"},{"location":"storage/filesystem/","page":"Filesystem","title":"Filesystem","text":"Read and write access to local files","category":"page"},{"location":"storage/filesystem/#Parameters","page":"Filesystem","title":"Parameters","text":"","category":"section"},{"location":"storage/filesystem/","page":"Filesystem","title":"Filesystem","text":"path: The path to the file in question, relative to the Data.toml if applicable, otherwise relative to the current working directory.","category":"page"},{"location":"storage/filesystem/#Usage-examples","page":"Filesystem","title":"Usage examples","text":"","category":"section"},{"location":"storage/filesystem/","page":"Filesystem","title":"Filesystem","text":"[[iris.loader]]\ndriver = \"filesystem\"\npath = \"iris.csv\"","category":"page"},{"location":"storage/filesystem/","page":"Filesystem","title":"Filesystem","text":"[[iris.loader]]\ndriver = \"filesystem\"\npath = \"~/data/iris.csv\"","category":"page"},{"location":"storage/s3/#storage-s3","page":"S3","title":"S3","text":"","category":"section"},{"location":"storage/s3/","page":"S3","title":"S3","text":"Fetch data from an S3 bucket.","category":"page"},{"location":"storage/s3/#Required-packages","page":"S3","title":"Required packages","text":"","category":"section"},{"location":"storage/s3/","page":"S3","title":"S3","text":"AWS","category":"page"},{"location":"storage/s3/#Parameters","page":"S3","title":"Parameters","text":"","category":"section"},{"location":"storage/s3/","page":"S3","title":"S3","text":"bucket: The name of the S3 bucket.\nobject: The name of the object within the bucket.\nregion: The AWS region in which the bucket is located.\nversion: The version of the object to fetch.\nheaders: A dictionary of headers to pass to the request.\nbyte_range: A two-element vector of integers specifying the byte range to fetch.","category":"page"},{"location":"storage/s3/#Usage-examples","page":"S3","title":"Usage examples","text":"","category":"section"},{"location":"storage/s3/","page":"S3","title":"S3","text":"[[iris.loader]]\ndriver = \"s3\"\nbucket = \"mybucket\"\nobject = \"path/to/iris.csv\"","category":"page"},{"location":"plugins/addpkgs/#plugin-addpkgs","page":"AddPkgs","title":"AddPkgs","text":"","category":"section"},{"location":"plugins/addpkgs/","page":"AddPkgs","title":"AddPkgs","text":"info: Using this plugin\nTo use the plugin, either modify the plugins entry of the collection's Data.toml to include \"addpkgs\", or use the Data REPL's plugin add/plugin remove subcommands.","category":"page"},{"location":"plugins/addpkgs/","page":"AddPkgs","title":"AddPkgs","text":"Register required packages of the Data Collection that needs them.","category":"page"},{"location":"plugins/addpkgs/","page":"AddPkgs","title":"AddPkgs","text":"When using DataToolkit.@addpkgs in an interactive session, the named packages will be automatically added to the Data.toml of applicable currently-loaded data collections â€” avoiding the nead to manually look up the package's UUID and edit the configuration yourself.","category":"page"},{"location":"plugins/addpkgs/#Example-usage","page":"AddPkgs","title":"Example usage","text":"","category":"section"},{"location":"plugins/addpkgs/","page":"AddPkgs","title":"AddPkgs","text":"[config.packages]\nCSV = \"336ed68f-0bac-5ca0-87d4-7b16caf5d00b\"","category":"page"},{"location":"plugins/addpkgs/","page":"AddPkgs","title":"AddPkgs","text":"With the above configuration and this plugin, upon loading the data collection, the CSV package will be registered under the data collection's module.","category":"page"},{"location":"saveload/compressed/#saveload-compressed","page":"Compressed","title":"Compressed","text":"","category":"section"},{"location":"saveload/compressed/","page":"Compressed","title":"Compressed","text":"Load and write a variety of compressed formats","category":"page"},{"location":"saveload/compressed/#Description","page":"Compressed","title":"Description","text":"","category":"section"},{"location":"saveload/compressed/","page":"Compressed","title":"Compressed","text":"This is a collection of drivers which enable transparent compression and decompression of data, specifically the following eponymous drivers:","category":"page"},{"location":"saveload/compressed/","page":"Compressed","title":"Compressed","text":"gzip\nzlib\ndeflate\nbzip2\nxz\nzstd","category":"page"},{"location":"saveload/compressed/#Input/output","page":"Compressed","title":"Input/output","text":"","category":"section"},{"location":"saveload/compressed/","page":"Compressed","title":"Compressed","text":"It is assumed that during reading decompression is the desired operation, compression desired when writing.","category":"page"},{"location":"saveload/compressed/","page":"Compressed","title":"Compressed","text":"In both cases, IO \\to IO is the recommended pair of input/output formats, but IO or String to Vector{UInt8} or String are also supported.","category":"page"},{"location":"saveload/compressed/#Required-packages","page":"Compressed","title":"Required packages","text":"","category":"section"},{"location":"saveload/compressed/","page":"Compressed","title":"Compressed","text":"CodecZlib, for the following drivers:\ngzip\nzlib\ndeflate\nCodecBzip2 for the bzip2 driver\nCodecXz for the xz driver\nCodecZstd for the zstd driver","category":"page"},{"location":"saveload/compressed/#Usage-examples","page":"Compressed","title":"Usage examples","text":"","category":"section"},{"location":"saveload/compressed/","page":"Compressed","title":"Compressed","text":"[[iris-raw.loader]]\ndriver = \"gzip\"","category":"page"},{"location":"storage/passthrough/#storage-passthrough","page":"Passthrough","title":"Passthrough","text":"","category":"section"},{"location":"storage/passthrough/","page":"Passthrough","title":"Passthrough","text":"Use a data set as a storage source","category":"page"},{"location":"storage/passthrough/","page":"Passthrough","title":"Passthrough","text":"The passthrough storage driver enables dataset redirection by offering the loaded result of another data set as a read-only storage transformer.","category":"page"},{"location":"storage/passthrough/","page":"Passthrough","title":"Passthrough","text":"Write capability may be added in future.","category":"page"},{"location":"storage/passthrough/#Parameters","page":"Passthrough","title":"Parameters","text":"","category":"section"},{"location":"storage/passthrough/","page":"Passthrough","title":"Passthrough","text":"source: The identifier of the source dataset to be loaded.","category":"page"},{"location":"storage/passthrough/#Usage-examples","page":"Passthrough","title":"Usage examples","text":"","category":"section"},{"location":"storage/passthrough/","page":"Passthrough","title":"Passthrough","text":"[[iris2.storage]]\ndriver = \"passthrough\"\nsource = \"iris1\"","category":"page"},{"location":"storage/null/#storage-null","page":"Null","title":"Null","text":"","category":"section"},{"location":"storage/null/","page":"Null","title":"Null","text":"A special driver sometimes needed for the julia loader","category":"page"},{"location":"storage/null/","page":"Null","title":"Null","text":"This driver always produces Some(nothing).","category":"page"},{"location":"storage/raw/#storage-raw","page":"Raw","title":"Raw","text":"","category":"section"},{"location":"storage/raw/","page":"Raw","title":"Raw","text":"Access (read/write) values encoded in the data TOML file.","category":"page"},{"location":"storage/raw/","page":"Raw","title":"Raw","text":"The passthrough loader is often useful when using this storage driver.","category":"page"},{"location":"storage/raw/#Parameters","page":"Raw","title":"Parameters","text":"","category":"section"},{"location":"storage/raw/","page":"Raw","title":"Raw","text":"value: The value in question","category":"page"},{"location":"storage/raw/#Usage-examples","page":"Raw","title":"Usage examples","text":"","category":"section"},{"location":"storage/raw/","page":"Raw","title":"Raw","text":"[[lifemeaning.storage]]\ndriver = \"raw\"\nvalue = 42","category":"page"},{"location":"storage/raw/","page":"Raw","title":"Raw","text":"[[parameters.storage]]\ndriver = \"raw\"\nvalue = { a = 3, b = \"*\", c = false }","category":"page"},{"location":"plugins/defaults/#plugin-defaults","page":"Defaults","title":"Defaults","text":"","category":"section"},{"location":"plugins/defaults/","page":"Defaults","title":"Defaults","text":"info: Using this plugin\nTo use the plugin, either modify the plugins entry of the collection's Data.toml to include \"defaults\", or use the Data REPL's plugin add/plugin remove subcommands.","category":"page"},{"location":"plugins/defaults/","page":"Defaults","title":"Defaults","text":"Apply default values from the \"defaults\" data collection property. This works with both DataSets and DataTransformers.","category":"page"},{"location":"plugins/defaults/#Default-DataSet-property","page":"Defaults","title":"Default DataSet property","text":"","category":"section"},{"location":"plugins/defaults/","page":"Defaults","title":"Defaults","text":"[config.defaults]\ndescription=\"Oh no, nobody bothered to describe this dataset.\"","category":"page"},{"location":"plugins/defaults/#Default-DataTransformer-property","page":"Defaults","title":"Default DataTransformer property","text":"","category":"section"},{"location":"plugins/defaults/","page":"Defaults","title":"Defaults","text":"This is scoped to a particular transformer, and a particular driver. One may also affect all drivers with the special \"all drivers\" key _. Specific-driver defaults always override all-driver defaults.","category":"page"},{"location":"plugins/defaults/","page":"Defaults","title":"Defaults","text":"[config.defaults.storage._]\npriority=0\n\n[config.defaults.storage.filesystem]\npriority=2","category":"page"},{"location":"saveload/qoi/#saveload-qoi","page":"QOI","title":"QOI","text":"","category":"section"},{"location":"saveload/qoi/","page":"QOI","title":"QOI","text":"Encode and decode QOI (Quite Ok Image) files","category":"page"},{"location":"saveload/qoi/#Input/output","page":"QOI","title":"Input/output","text":"","category":"section"},{"location":"saveload/qoi/","page":"QOI","title":"QOI","text":"The qoi driver expects data to be provided via IO.","category":"page"},{"location":"saveload/qoi/","page":"QOI","title":"QOI","text":"It will parse to a Matrix{<:Colorant}.","category":"page"},{"location":"saveload/qoi/#Required-packages","page":"QOI","title":"Required packages","text":"","category":"section"},{"location":"saveload/qoi/","page":"QOI","title":"QOI","text":"QOI","category":"page"},{"location":"saveload/qoi/#Usage-examples","page":"QOI","title":"Usage examples","text":"","category":"section"},{"location":"saveload/qoi/","page":"QOI","title":"QOI","text":"[[someimage.loader]]\ndriver = \"qoi\"","category":"page"},{"location":"saveload/chain/#saveload-chain","page":"Chain","title":"Chain","text":"","category":"section"},{"location":"saveload/chain/","page":"Chain","title":"Chain","text":"Chain multiple transformers together","category":"page"},{"location":"saveload/chain/#Input/Output","page":"Chain","title":"Input/Output","text":"","category":"section"},{"location":"saveload/chain/","page":"Chain","title":"Chain","text":"The chain loader can accept any form of input, and produce any form of output.","category":"page"},{"location":"saveload/chain/","page":"Chain","title":"Chain","text":"In passes the initial input through a chain of other loaders, via the loader property. A list of loader driver names can be given to chain together those loaders with no properties. To provide properties, use a TOML array of tables and specify the full (driver = \"name\", ...) form.","category":"page"},{"location":"saveload/chain/","page":"Chain","title":"Chain","text":"Writing is not currently supported.","category":"page"},{"location":"saveload/chain/#Usage-examples","page":"Chain","title":"Usage examples","text":"","category":"section"},{"location":"saveload/chain/","page":"Chain","title":"Chain","text":"[[iris.loader]]\ndriver = \"chain\"\nloaders = [\"gzip\", \"csv\"]","category":"page"},{"location":"saveload/chain/","page":"Chain","title":"Chain","text":"[[iris.loader]]\ndriver = \"chain\"\nloaders = [\"gzip\", { driver = \"tar\", file = \"iris.csv\" }, \"csv\"]","category":"page"},{"location":"saveload/chain/","page":"Chain","title":"Chain","text":"[[chained.loader]]\ndriver = \"chain\"\n\n    [[chained.loader.loaders]]\n    driver = \"gzip\"\n\n    [[chained.loader.loaders]]\n    driver = \"csv\"\n\n    [[chained.loader.loaders]]\n    driver = \"julia\"\n    input = \"DataFrame\"\n    path = \"scripts/custom_postprocessing.jl\"\n    type = \"DataFrame\"","category":"page"},{"location":"saveload/julia/#saveload-julia","page":"Julia","title":"Julia","text":"","category":"section"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"Load and write data via custom Julia scripts","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"The julia driver enables the parsing and serialisation of arbitrary data to arbitrary information formats and vice versa via custom Julia functions run within the scope of the parent module.","category":"page"},{"location":"saveload/julia/#Input/output","page":"Julia","title":"Input/output","text":"","category":"section"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"The julia driver either accepts /no/ direct input, or accepts input from storage backends of the type specified by the input keyword. Thus, the provided functions must take one of the following forms:","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"function (input; kwargs...)\n    # Direct input form.\nend","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"function (kwargs...)\n    # No direct input form.\nend","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"In both cases, additional information can be provided via the arguments keyword, which supplies additional keyword arguments to the Julia function invoked. It is worth remembering the special treatment of DataSet strings which are dynamically resolved (see the examples).","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"Writer functions take two arguments, the destination (a handle to the storage backend, usually IO) and the information to be serialised.","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"function (destination, info)\n    # Write `info` to `destination`, and return\n    # not-nothing if the operation succeeds.\nend","category":"page"},{"location":"saveload/julia/#Parameters","page":"Julia","title":"Parameters","text":"","category":"section"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"input: (loading only) The data type required for direct input.\npath: A local file path, relative to pathroot if provided or the directory of the data TOML file.\npathroot: The root path to expand path against, relative to the directory of the data TOML file.\nfunction: The function as a string, inline in the data TOML file.\narguments: Arguments to be provided to the called function.","category":"page"},{"location":"saveload/julia/#Usage-examples","page":"Julia","title":"Usage examples","text":"","category":"section"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"[[addone.loader]]\ndriver = \"julia\"\ninput = \"Number\"\nfunction = \"n -> n+1\"","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"[[combined.loader]]\ndriver = \"julia\"\npath = \"scripts/mergedata.jl\"\n\n[combined.loader.arguments]\nfoo = \"ðŸ“‡DATASET<<foo::DataFrame>>\"\nbar = \"ðŸ“‡DATASET<<bar::DataFrame>>\"\nbaz = \"ðŸ“‡DATASET<<baz::DataFrame>>\"","category":"page"},{"location":"saveload/julia/","page":"Julia","title":"Julia","text":"[[repeated.loader]]\ndriver = \"julia\"\ninput = \"Integer\"\nfunction = \"(n::Integer; data::DataFrame) -> repeat(data, n)\"\narguments = { data = \"ðŸ“‡DATASET<<iris::DataFrame>>\" }","category":"page"},{"location":"saveload/xlsx/#saveload-xlsx","page":"XLSX","title":"XLSX","text":"","category":"section"},{"location":"saveload/xlsx/","page":"XLSX","title":"XLSX","text":"Load Microsoft Excel XML Spreadsheet (XLSX) files","category":"page"},{"location":"saveload/xlsx/#Input/output","page":"XLSX","title":"Input/output","text":"","category":"section"},{"location":"saveload/xlsx/","page":"XLSX","title":"XLSX","text":"The xlsx driver expects data to be provided via a FilePath, and will provide information as a Matrix.","category":"page"},{"location":"saveload/xlsx/#Required-packages","page":"XLSX","title":"Required packages","text":"","category":"section"},{"location":"saveload/xlsx/","page":"XLSX","title":"XLSX","text":"XLSX","category":"page"},{"location":"saveload/xlsx/#Parameters","page":"XLSX","title":"Parameters","text":"","category":"section"},{"location":"saveload/xlsx/","page":"XLSX","title":"XLSX","text":"sheet: the sheet to act on\nrange: the sheet range that should be loaded","category":"page"},{"location":"saveload/xlsx/#Usage-example","page":"XLSX","title":"Usage example","text":"","category":"section"},{"location":"saveload/xlsx/","page":"XLSX","title":"XLSX","text":"[[pleaseno]]\ndriver = \"xlsx\"\nsheet = \"better_formats\"\nrange = \"A1:A999\"","category":"page"},{"location":"saveload/csv/#saveload-csv","page":"CSV","title":"CSV","text":"","category":"section"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"Parse and serialize CSV data","category":"page"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"While this is the csv driver, any format that CSV.jl can work with is supported (as this is merely a thin layer around CSV.jl)","category":"page"},{"location":"saveload/csv/#Input/output","page":"CSV","title":"Input/output","text":"","category":"section"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"The csv driver expects data to be provided via IO.","category":"page"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"By default this driver announces support for parsing to three data types:","category":"page"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"DataFrame\nMatrix\nCSV.File","category":"page"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"Other Tables compatible types are of course supported, and can be used directly (i.e. without having to use the CSV.File result) by specifying the type with the type transformer keyword.","category":"page"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"When writing, any type compatible with CSV.write can be used directly, to any storage backend supporting IO.","category":"page"},{"location":"saveload/csv/#Required-packages","page":"CSV","title":"Required packages","text":"","category":"section"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"CSV","category":"page"},{"location":"saveload/csv/#Parameters","page":"CSV","title":"Parameters","text":"","category":"section"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"args: keyword arguments to be provided to CSV.File, see https://csv.juliadata.org/stable/reading.html#CSV.File.","category":"page"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"As a quick-reference, some arguments of particular interest are:","category":"page"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"header: Either,\nthe row number to parse for column names\nthe list of column names\ndelim: the column delimiter\ntypes: a single type, or vector of types to be used for the columns","category":"page"},{"location":"saveload/csv/#Usage-examples","page":"CSV","title":"Usage examples","text":"","category":"section"},{"location":"saveload/csv/","page":"CSV","title":"CSV","text":"[[iris.loader]]\ndriver = \"csv\"\n\n    [iris.loader.args]\n    key = value...","category":"page"},{"location":"saveload/jld2/#saveload-jld2","page":"JLD2","title":"JLD2","text":"","category":"section"},{"location":"saveload/jld2/","page":"JLD2","title":"JLD2","text":"Load and write data in the JLD2 format","category":"page"},{"location":"saveload/jld2/#Input/output","page":"JLD2","title":"Input/output","text":"","category":"section"},{"location":"saveload/jld2/","page":"JLD2","title":"JLD2","text":"The jld2 driver expects data to be provided via a FilePath.","category":"page"},{"location":"saveload/jld2/#Required-packages","page":"JLD2","title":"Required packages","text":"","category":"section"},{"location":"saveload/jld2/","page":"JLD2","title":"JLD2","text":"JLD2","category":"page"},{"location":"saveload/jld2/#Parameters","page":"JLD2","title":"Parameters","text":"","category":"section"},{"location":"saveload/jld2/","page":"JLD2","title":"JLD2","text":"key: A particular key, or list of keys, to load from the JLD2 dataset.","category":"page"},{"location":"saveload/jld2/#Usage-examples","page":"JLD2","title":"Usage examples","text":"","category":"section"},{"location":"saveload/jld2/","page":"JLD2","title":"JLD2","text":"[[sample.loader]]\ndriver = \"jld2\"","category":"page"},{"location":"saveload/netpbm/#saveload-netpbm","page":"Netpbm","title":"Netpbm","text":"","category":"section"},{"location":"saveload/netpbm/","page":"Netpbm","title":"Netpbm","text":"Encode and decode NetPBM files","category":"page"},{"location":"saveload/netpbm/#Input/output","page":"Netpbm","title":"Input/output","text":"","category":"section"},{"location":"saveload/netpbm/","page":"Netpbm","title":"Netpbm","text":"The netpbm driver expects data to be provided via IO.","category":"page"},{"location":"saveload/netpbm/","page":"Netpbm","title":"Netpbm","text":"It will parse to a Matrix{<:Colorant}.","category":"page"},{"location":"saveload/netpbm/#Required-packages","page":"Netpbm","title":"Required packages","text":"","category":"section"},{"location":"saveload/netpbm/","page":"Netpbm","title":"Netpbm","text":"Netpbm","category":"page"},{"location":"saveload/netpbm/#Usage-examples","page":"Netpbm","title":"Usage examples","text":"","category":"section"},{"location":"saveload/netpbm/","page":"Netpbm","title":"Netpbm","text":"[[someimage.loader]]\ndriver = \"netpbm\"","category":"page"},{"location":"saveload/tiff/#saveload-tiff","page":"Tiff","title":"Tiff","text":"","category":"section"},{"location":"saveload/tiff/","page":"Tiff","title":"Tiff","text":"Encode and decode Tiff files","category":"page"},{"location":"saveload/tiff/#Input/output","page":"Tiff","title":"Input/output","text":"","category":"section"},{"location":"saveload/tiff/","page":"Tiff","title":"Tiff","text":"The tiff driver expects data to be provided via IO.","category":"page"},{"location":"saveload/tiff/","page":"Tiff","title":"Tiff","text":"It will parse to a TiffImages.AbstractTIFF.","category":"page"},{"location":"saveload/tiff/#Required-packages","page":"Tiff","title":"Required packages","text":"","category":"section"},{"location":"saveload/tiff/","page":"Tiff","title":"Tiff","text":"TiffImages","category":"page"},{"location":"saveload/tiff/#Usage-examples","page":"Tiff","title":"Usage examples","text":"","category":"section"},{"location":"saveload/tiff/","page":"Tiff","title":"Tiff","text":"[[someimage.loader]]\ndriver = \"tiff\"","category":"page"},{"location":"saveload/webp/#saveload-webp","page":"Webp","title":"Webp","text":"","category":"section"},{"location":"saveload/webp/","page":"Webp","title":"Webp","text":"Encode and decode WEBP images","category":"page"},{"location":"saveload/webp/#Input/output","page":"Webp","title":"Input/output","text":"","category":"section"},{"location":"saveload/webp/","page":"Webp","title":"Webp","text":"The webp driver expects data to be provided via IO.","category":"page"},{"location":"saveload/webp/","page":"Webp","title":"Webp","text":"It will parse to a Matrix{<:Colorant}, and accept such a matrix to save.","category":"page"},{"location":"saveload/webp/#Required-packages","page":"Webp","title":"Required packages","text":"","category":"section"},{"location":"saveload/webp/","page":"Webp","title":"Webp","text":"WebP","category":"page"},{"location":"saveload/webp/#Parameters","page":"Webp","title":"Parameters","text":"","category":"section"},{"location":"saveload/webp/","page":"Webp","title":"Webp","text":"None","category":"page"},{"location":"saveload/webp/#Usage-examples","page":"Webp","title":"Usage examples","text":"","category":"section"},{"location":"saveload/webp/","page":"Webp","title":"Webp","text":"[[someimage.loader]]\ndriver = \"webp\"","category":"page"},{"location":"saveload/serialization/#saveload-serialization","page":"Serialization","title":"Serialization","text":"","category":"section"},{"location":"saveload/serialization/","page":"Serialization","title":"Serialization","text":"Load and write arbitrary Julia objects.","category":"page"},{"location":"saveload/serialization/","page":"Serialization","title":"Serialization","text":"The serialization driver uses Julia's built-in Serialization library to serialize and deserialize Julia objects. This should be used with caution, as it can be a security risk if the serialized data is from an untrusted source.","category":"page"},{"location":"saveload/serialization/","page":"Serialization","title":"Serialization","text":"Also note that that successful deserialization often requires the same or newer version of Julia and the same package versions that were used to serialize the data.","category":"page"},{"location":"saveload/serialization/#Input/output","page":"Serialization","title":"Input/output","text":"","category":"section"},{"location":"saveload/serialization/","page":"Serialization","title":"Serialization","text":"The serialization driver reads and writes to IO and files.","category":"page"},{"location":"saveload/serialization/#Usage-examples","page":"Serialization","title":"Usage examples","text":"","category":"section"},{"location":"saveload/serialization/","page":"Serialization","title":"Serialization","text":"[[iris.loader]]\ndriver = \"serialization\"","category":"page"},{"location":"saveload/xml/#saveload-xml","page":"XML","title":"XML","text":"","category":"section"},{"location":"saveload/xml/","page":"XML","title":"XML","text":"Load and write XML data.","category":"page"},{"location":"saveload/xml/#Input/output","page":"XML","title":"Input/output","text":"","category":"section"},{"location":"saveload/xml/","page":"XML","title":"XML","text":"The xml driver expects data to be provided via an IO stream.","category":"page"},{"location":"saveload/xml/","page":"XML","title":"XML","text":"This driver supports parsing to two data types:","category":"page"},{"location":"saveload/xml/","page":"XML","title":"XML","text":"XML.LazyNode\nXML.Node","category":"page"},{"location":"saveload/xml/#Required-packages","page":"XML","title":"Required packages","text":"","category":"section"},{"location":"saveload/xml/","page":"XML","title":"XML","text":"XML","category":"page"},{"location":"saveload/xml/#Usage-examples","page":"XML","title":"Usage examples","text":"","category":"section"},{"location":"saveload/xml/","page":"XML","title":"XML","text":"[[sample.loader]]\ndriver = \"xml\"","category":"page"},{"location":"storage/git/#storage-git","page":"Git","title":"Git","text":"","category":"section"},{"location":"storage/git/","page":"Git","title":"Git","text":"Access a tarball of a git repository","category":"page"},{"location":"storage/git/#Parameters","page":"Git","title":"Parameters","text":"","category":"section"},{"location":"storage/git/","page":"Git","title":"Git","text":"remote: A remote repository path, e.g. git://... or git@....\nrevision: A \"tree-ish\" specification of a particular revision to use, HEAD by default. See https://git-scm.com/docs/gitrevisions#specifyingrevisions.\npath (optional): A subdirectory of the repository to archive, instead of the entire repository.\nclone: Whether to use a clone instead of git archive --remote. false by default.","category":"page"},{"location":"storage/git/#Tree-ish-forms","page":"Git","title":"Tree-ish forms","text":"","category":"section"},{"location":"storage/git/","page":"Git","title":"Git","text":"The particular \"tree-ish\" forms accepted can depend on the remote, but these are the forms that seem to work.","category":"page"},{"location":"storage/git/","page":"Git","title":"Git","text":"Form Examples\n<describeOutput> v1.7.4.2-679-g3bee7fb\n<refname> master, heads/master, refs/heads/master\n<rev> HEAD, v1.5.1","category":"page"},{"location":"storage/git/","page":"Git","title":"Git","text":"When applied to a local/cloned repository, more forms are possible.","category":"page"},{"location":"storage/git/","page":"Git","title":"Git","text":"Form Examples\n<sha1> dae86e1950b1277e545cee180551750029cfe735\n<refname>@{<date>} master@{yesterday}, HEAD@{5 minutes ago}\n<refname>@{<n>} master@{1}\n@{<n>} @{1}\n@{-<n>} @{-1}\n<refname>@{upstream} master@{upstream}, @{u}\n<rev>~<n> master~3\n<rev>^{<type>} v0.99.8^{commit}\n<rev>^{} v0.99.8^{}\n<rev>^{/<text>} HEAD^{/fix nasty bug}\n:/<text> :/fix nasty bug","category":"page"},{"location":"storage/git/#Usage-examples","page":"Git","title":"Usage examples","text":"","category":"section"},{"location":"storage/git/","page":"Git","title":"Git","text":"[[myrepo.storage]]\ndriver = \"git\"\nremote = \"git@forge.example:user/project.git\"\nrevision = \"v1.4\"\npath = \"subdir/thing\"","category":"page"},{"location":"storage/git/","page":"Git","title":"Git","text":"[[myrepo.storage]]\ndriver = \"git\"\nremote = \"https://forge.example:user/project.git\"\nrevision = \"2b8a2a4390\"\nclone = true","category":"page"},{"location":"saveload/delim/#saveload-delim","page":"Delim","title":"Delim","text":"","category":"section"},{"location":"saveload/delim/","page":"Delim","title":"Delim","text":"Parse and serialize delimited data","category":"page"},{"location":"saveload/delim/#Input/output","page":"Delim","title":"Input/output","text":"","category":"section"},{"location":"saveload/delim/","page":"Delim","title":"Delim","text":"The delim driver expects data to be provided via IO.","category":"page"},{"location":"saveload/delim/","page":"Delim","title":"Delim","text":"It presents the parsed information as a Matrix, and can write Matrix and Vector types to an IO-supporting storage backend.","category":"page"},{"location":"saveload/delim/#Required-packages","page":"Delim","title":"Required packages","text":"","category":"section"},{"location":"saveload/delim/","page":"Delim","title":"Delim","text":"DelimitedFiles (the stdlib)","category":"page"},{"location":"saveload/delim/#Parameters","page":"Delim","title":"Parameters","text":"","category":"section"},{"location":"saveload/delim/","page":"Delim","title":"Delim","text":"dtype: The element type of the matrix\ndelim: The character used to separate entries\neol: The character separating each line of input\nheader: Whether the first row of data should be read as a header\nskipstart: The number of initial lines of input to ignore\nskipblanks: Whether to ignore blank lines\nquotes: Whether to allow quoted strings to contain column and line delimiters","category":"page"},{"location":"saveload/delim/#Usage-examples","page":"Delim","title":"Usage examples","text":"","category":"section"},{"location":"saveload/delim/","page":"Delim","title":"Delim","text":"[[iris.loader]]\ndriver = \"delim\"","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"EditURL=\"/home/runner/work/DataToolkit.jl/DataToolkit.jl/Common/docs/src/index.org\"","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"DataToolkitCommon takes the skeleton provided by DataToolkitCore and builds the basic functionality needed to make DataToolkit actually useful.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"To gain an understanding of how these two components fit together, it is recommended the DataToolkitCore docs be looked at first to understand the system, and then these docs for useful transformers and plugins to actually work with your data.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Note that in addition to being displayed here, you can also view the documentation of the various drivers in the data> REPL like so:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"data> ?: # See a list of all known drivers\n storage transformers (<count>)\n   [...]\n loader transformers (<count>)\n   [...]\n writer transformers (<count>)\n   [...]\n\ndata> ?:csv # View the CSV loader documentation\n  Parse and serialize CSV data\n  [...]","category":"page"},{"location":"saveload/gif/#saveload-gif","page":"Gif","title":"Gif","text":"","category":"section"},{"location":"saveload/gif/","page":"Gif","title":"Gif","text":"Encode and decode GIF images","category":"page"},{"location":"saveload/gif/#Input/output","page":"Gif","title":"Input/output","text":"","category":"section"},{"location":"saveload/gif/","page":"Gif","title":"Gif","text":"The gif driver expects data to be provided via IO.","category":"page"},{"location":"saveload/gif/","page":"Gif","title":"Gif","text":"It will parse to a Matrix{<:Colorant}, and accept such a matrix to save.","category":"page"},{"location":"saveload/gif/#Required-packages","page":"Gif","title":"Required packages","text":"","category":"section"},{"location":"saveload/gif/","page":"Gif","title":"Gif","text":"GIFImages","category":"page"},{"location":"saveload/gif/#Parameters","page":"Gif","title":"Parameters","text":"","category":"section"},{"location":"saveload/gif/","page":"Gif","title":"Gif","text":"None","category":"page"},{"location":"saveload/gif/#Usage-examples","page":"Gif","title":"Usage examples","text":"","category":"section"},{"location":"saveload/gif/","page":"Gif","title":"Gif","text":"[[someimage.loader]]\ndriver = \"gif\"","category":"page"},{"location":"saveload/png/#saveload-png","page":"PNG","title":"PNG","text":"","category":"section"},{"location":"saveload/png/","page":"PNG","title":"PNG","text":"Encode and decode PNG images","category":"page"},{"location":"saveload/png/#Input/output","page":"PNG","title":"Input/output","text":"","category":"section"},{"location":"saveload/png/","page":"PNG","title":"PNG","text":"The png driver expects data to be provided via IO.","category":"page"},{"location":"saveload/png/","page":"PNG","title":"PNG","text":"It will parse to a Matrix{<:Colorant}.","category":"page"},{"location":"saveload/png/#Required-packages","page":"PNG","title":"Required packages","text":"","category":"section"},{"location":"saveload/png/","page":"PNG","title":"PNG","text":"PNGFile","category":"page"},{"location":"saveload/png/#Parameters","page":"PNG","title":"Parameters","text":"","category":"section"},{"location":"saveload/png/#Reader","page":"PNG","title":"Reader","text":"","category":"section"},{"location":"saveload/png/","page":"PNG","title":"PNG","text":"gamma: The gamma correction coefficient.\nexpand_paletted: See the PNGFile docs.","category":"page"},{"location":"saveload/png/#Writer","page":"PNG","title":"Writer","text":"","category":"section"},{"location":"saveload/png/","page":"PNG","title":"PNG","text":"gamma: The gamma correction coefficient.\ncompression_level: 0-9\ncompression_strategy: Either the number or string of: 0/\"default\", 1/\"filtered\", 2/\"huffman\", 3/\"rle\" (default), or 4/\"fixed\".\nfilters: Either the number or string of: 0/\"none\", 1/\"sub\", 3/\"average\", 4/\"paeth\" (default)","category":"page"},{"location":"saveload/png/#Usage-examples","page":"PNG","title":"Usage examples","text":"","category":"section"},{"location":"saveload/png/","page":"PNG","title":"PNG","text":"[[someimage.loader]]\ndriver = \"png\"","category":"page"}]
}
